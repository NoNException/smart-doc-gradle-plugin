buildscript {
    repositories {
        maven { url 'https://maven.aliyun.com/repository/public' }
        maven { url 'https://maven.aliyun.com/repository/gradle-plugin' }
        maven {
            url "https://plugins.gradle.org/m2/"
        }
        mavenCentral()
    }
}

plugins {
    id 'groovy'
    id "java"
    id "java-gradle-plugin"
    id "maven-publish"
    id "signing"
    id "com.gradle.plugin-publish" version "0.12.0"
}

group 'com.github.shalousun'
version '2.6.2'

sourceCompatibility = 1.8

repositories {
    maven {
        allowInsecureProtocol = true
        url 'http://localhost:8081/nexus/content/groups/public/'
    }
    maven { url 'https://maven.aliyun.com/repository/public' }
    mavenCentral()
}

dependencies {
    implementation group: 'com.github.shalousun', name: 'smart-doc', version: '2.6.2'
}
tasks.withType(JavaCompile) {
    options.encoding = "UTF-8"
}

task javadocJar(type: Jar) {
    archiveClassifier = "javadoc"
    from javadoc
}

task sourcesJar(type: Jar) {
    archiveClassifier = 'sources'
    from sourceSets.main.allSource
}

artifacts {
    archives javadocJar, sourcesJar
}

signing {
    sign configurations.archives
}

gradlePlugin {
    plugins {
        greetingsPlugin {
            id = 'com.github.shalousun.smart-doc'
            implementationClass = 'com.smartdoc.gradle.plugin.SmartDocPlugin'
        }
    }
}
// publish to https://plugins.gradle.org/
pluginBundle {
    website = 'https://github.com/smart-doc-group/smart-doc-gradle-plugin'
    vcsUrl = 'https://github.com/smart-doc-group/smart-doc-gradle-plugin'
    description = 'smart-doc gradle plugin'
    tags = ['smart-doc']
    plugins {
        greetingsPlugin {
            // id is captured from java-gradle-plugin configuration
            displayName = 'smart-doc gradle plugin'
        }
    }
}

// publish to local, see https://docs.gradle.org/current/userguide/publishing_maven.html
publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId project.group
            artifactId project.name
            version "${version}"
            from components.java
            // more goes in here
        }
    }
    repositories {
        maven {
            allowInsecureProtocol(true)
            url "http://localhost:8081/nexus/content/repositories/releases/"
            credentials {
                username 'admin'
                password 'admin123'
            }
        }
    }
}
